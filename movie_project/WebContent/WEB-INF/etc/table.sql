/* 공통코드 */
CREATE TABLE COMMONCODE (
	CMN_NO VARCHAR2(6) NOT NULL, /* 코드번호 */
	CMN_CODE_ENG VARCHAR2(30) NOT NULL, /* 영문코드 */
	CMN_CODE_KOR VARCHAR2(30) NOT NULL /* 한글코드 */
);

COMMENT ON TABLE COMMONCODE IS '공통코드';

COMMENT ON COLUMN COMMONCODE.CMN_NO IS '코드번호';

COMMENT ON COLUMN COMMONCODE.CMN_CODE_ENG IS '영문코드';

COMMENT ON COLUMN COMMONCODE.CMN_CODE_KOR IS '한글코드';

CREATE UNIQUE INDEX PK_COMMONCODE
	ON COMMONCODE (
		CMN_NO ASC
	);

ALTER TABLE COMMONCODE
	ADD
		CONSTRAINT PK_COMMONCODE
		PRIMARY KEY (
			CMN_NO
		);

/* 회원 */
CREATE TABLE MEMBER (
	MEM_NO NUMBER NOT NULL, /* 회원번호 */
	ZIP_NO NUMBER NOT NULL, /* 우편번호 */
	MEM_ID VARCHAR2(20) NOT NULL, /* ID */
	MEM_NAME VARCHAR2(30) NOT NULL, /* 이름 */
	MEM_PASSWORD VARCHAR2(30) NOT NULL, /* 패스워드 */
	MEM_ADDRESSDEATIL VARCHAR2(100) NOT NULL, /* 상세주소 */
	MEM_BIRTHDATE CHAR(8) NOT NULL, /* 생년월일 */
	MEM_EMAIL VARCHAR2(50) NOT NULL, /* 이메일 */
	MEM_PHONENO VARCHAR2(12) NOT NULL, /* 연락처 */
	MEM_MILEAGE NUMBER(7) NOT NULL, /* 마일리지 */
	MEM_MEMBERTYPE VARCHAR2(6) NOT NULL, /* 회원분류 */
	MEM_JOINDATE VARCHAR2(19) NOT NULL, /* 가입일 */
	MEM_LASTLOGIN VARCHAR2(19), /* 최종로그인일 */
	MEM_STATUS VARCHAR2(6) NOT NULL /* 회원상태 */
);

COMMENT ON TABLE MEMBER IS '회원';

COMMENT ON COLUMN MEMBER.MEM_NO IS '회원번호';

COMMENT ON COLUMN MEMBER.ZIP_NO IS '우편번호';

COMMENT ON COLUMN MEMBER.MEM_ID IS 'ID';

COMMENT ON COLUMN MEMBER.MEM_NAME IS '이름';

COMMENT ON COLUMN MEMBER.MEM_PASSWORD IS '패스워드';

COMMENT ON COLUMN MEMBER.MEM_ADDRESSDEATIL IS '상세주소';

COMMENT ON COLUMN MEMBER.MEM_BIRTHDATE IS '생년월일';

COMMENT ON COLUMN MEMBER.MEM_EMAIL IS '이메일';

COMMENT ON COLUMN MEMBER.MEM_PHONENO IS '연락처';

COMMENT ON COLUMN MEMBER.MEM_MILEAGE IS '마일리지';

COMMENT ON COLUMN MEMBER.MEM_MEMBERTYPE IS '회원분류';

COMMENT ON COLUMN MEMBER.MEM_JOINDATE IS '가입일';

COMMENT ON COLUMN MEMBER.MEM_LASTLOGIN IS '최종로그인일';

COMMENT ON COLUMN MEMBER.MEM_STATUS IS '회원상태';

CREATE UNIQUE INDEX PK_MEMBER
	ON MEMBER (
		MEM_NO ASC
	);

ALTER TABLE MEMBER
	ADD
		CONSTRAINT PK_MEMBER
		PRIMARY KEY (
			MEM_NO
		);

/* 우편번호 */
CREATE TABLE ZIPCODE (
	ZIP_NO NUMBER NOT NULL, /* 번호 */
	ZIP_ZIPCODE VARCHAR2(6) NOT NULL, /* 우편번호 */
	ZIP_SIDO VARCHAR2(15) NOT NULL, /* 시도 */
	ZIP_SIGOONGOO VARCHAR2(30) NOT NULL, /* 시군구 */
	ZIP_EUPMYUNDONG VARCHAR2(30) NOT NULL, /* 읍면 */
	ZIP_DONGLI VARCHAR2(30) NOT NULL, /* 동리 */
	ZIP_ROADNAME VARCHAR2(30) NOT NULL, /* 도로명 */
	ZIP_BUILDINGMNO NUMBER NOT NULL, /* 건물본번 */
	ZIP_BUILDINGSNO NUMBER NOT NULL, /* 건물부번 */
	ZIP_BUILDINGNAME VARCHAR2(60) NOT NULL, /* 건물명 */
	ZIP_SAN CHAR(1) NOT NULL, /* 산여부 */
	ZIP_JIBUNMNO NUMBER NOT NULL, /* 지번본번 */
	ZIP_JIBUNSNO NUMBER NOT NULL /* 지번부번 */
);

COMMENT ON TABLE ZIPCODE IS '우편번호';

COMMENT ON COLUMN ZIPCODE.ZIP_NO IS '번호';

COMMENT ON COLUMN ZIPCODE.ZIP_ZIPCODE IS '우편번호';

COMMENT ON COLUMN ZIPCODE.ZIP_SIDO IS '시도';

COMMENT ON COLUMN ZIPCODE.ZIP_SIGOONGOO IS '시군구';

COMMENT ON COLUMN ZIPCODE.ZIP_EUPMYUNDONG IS '읍면';

COMMENT ON COLUMN ZIPCODE.ZIP_DONGLI IS '동리';

COMMENT ON COLUMN ZIPCODE.ZIP_ROADNAME IS '도로명';

COMMENT ON COLUMN ZIPCODE.ZIP_BUILDINGMNO IS '건물본번';

COMMENT ON COLUMN ZIPCODE.ZIP_BUILDINGSNO IS '건물부번';

COMMENT ON COLUMN ZIPCODE.ZIP_BUILDINGNAME IS '건물명';

COMMENT ON COLUMN ZIPCODE.ZIP_SAN IS '산여부';

COMMENT ON COLUMN ZIPCODE.ZIP_JIBUNMNO IS '지번본번';

COMMENT ON COLUMN ZIPCODE.ZIP_JIBUNSNO IS '지번부번';

CREATE UNIQUE INDEX PK_ZIPCODE
	ON ZIPCODE (
		ZIP_NO ASC
	);

ALTER TABLE ZIPCODE
	ADD
		CONSTRAINT PK_ZIPCODE
		PRIMARY KEY (
			ZIP_NO
		);

/* 극장 */
CREATE TABLE THEATER (
	THEA_NO NUMBER NOT NULL, /* 극장번호 */
	ZIP_NO NUMBER NOT NULL, /* 번호 */
	THEA_LOCATION VARCHAR2(30), /* 지점명 */
	THEA_PHONENO VARCHAR2(12), /* 연락처 */
	THEA_ADDRESSDETAIL VARCHAR2(100) /* 상세주소 */
);

COMMENT ON TABLE THEATER IS '극장';

COMMENT ON COLUMN THEATER.THEA_NO IS '극장번호';

COMMENT ON COLUMN THEATER.ZIP_NO IS '번호';

COMMENT ON COLUMN THEATER.THEA_LOCATION IS '지점명';

COMMENT ON COLUMN THEATER.THEA_PHONENO IS '연락처';

COMMENT ON COLUMN THEATER.THEA_ADDRESSDETAIL IS '상세주소';

CREATE UNIQUE INDEX PK_THEATER
	ON THEATER (
		THEA_NO ASC
	);

ALTER TABLE THEATER
	ADD
		CONSTRAINT PK_THEATER
		PRIMARY KEY (
			THEA_NO
		);

/* 티켓 */
CREATE TABLE TICKET (
	TIC_NO NUMBER NOT NULL, /* 티켓번호 */
	MEM_NO NUMBER NOT NULL, /* 회원번호 */
	SCH_NO VARCHAR2(10) NOT NULL, /* 스케줄번호 */
	TIC_DATE VARCHAR2(19) NOT NULL, /* 결제일시 */
	TIC_PRICE NUMBER NOT NULL, /* 결제금액 */
	TIC_PAYTYPE VARCHAR2(6) NOT NULL, /* 결제타입 */
	TIC_SEATNO VARCHAR2(400) NOT NULL, /* 좌석번호 */
	TIC_TOTALCUSTOMER NUMBER NOT NULL, /* 관람인원 */
	TIC_EXHIBITION VARCHAR2(6) NOT NULL /* 상영타입 */
);

COMMENT ON TABLE TICKET IS '티켓';

COMMENT ON COLUMN TICKET.TIC_NO IS '티켓번호';

COMMENT ON COLUMN TICKET.MEM_NO IS '회원번호';

COMMENT ON COLUMN TICKET.SCH_NO IS '스케줄번호';

COMMENT ON COLUMN TICKET.TIC_DATE IS '결제일시';

COMMENT ON COLUMN TICKET.TIC_PRICE IS '결제금액';

COMMENT ON COLUMN TICKET.TIC_PAYTYPE IS '결제타입';

COMMENT ON COLUMN TICKET.TIC_SEATNO IS '좌석번호';

COMMENT ON COLUMN TICKET.TIC_TOTALCUSTOMER IS '관람인원';

COMMENT ON COLUMN TICKET.TIC_EXHIBITION IS '상영타입';

CREATE UNIQUE INDEX PK_TICKET
	ON TICKET (
		TIC_NO ASC
	);

ALTER TABLE TICKET
	ADD
		CONSTRAINT PK_TICKET
		PRIMARY KEY (
			TIC_NO
		);

/* 상영스케쥴 */
CREATE TABLE SCHEDULE (
	SCH_NO VARCHAR2(10) NOT NULL, /* 스케줄번호 */
	SCH_TNO NUMBER NOT NULL, /* 극장번호 */
	SCH_ROOMNO VARCHAR2(6) NOT NULL, /* 상영관 */
	SCH_DATE CHAR(10) NOT NULL, /* 상영일 */
	SCH_STARTTIME CHAR(8) NOT NULL, /* 시작시간 */
	MOV_NO NUMBER NOT NULL /* 번호 */
);

COMMENT ON TABLE SCHEDULE IS '상영스케쥴';

COMMENT ON COLUMN SCHEDULE.SCH_NO IS '스케줄번호';

COMMENT ON COLUMN SCHEDULE.SCH_TNO IS '극장번호';

COMMENT ON COLUMN SCHEDULE.SCH_ROOMNO IS '상영관';

COMMENT ON COLUMN SCHEDULE.SCH_DATE IS '상영일';

COMMENT ON COLUMN SCHEDULE.SCH_STARTTIME IS '시작시간';

COMMENT ON COLUMN SCHEDULE.MOV_NO IS '번호';

CREATE UNIQUE INDEX PK_SCHEDULE
	ON SCHEDULE (
		SCH_NO ASC
	);

ALTER TABLE SCHEDULE
	ADD
		CONSTRAINT PK_SCHEDULE
		PRIMARY KEY (
			SCH_NO
		);

/* 자주가는 극장 */
CREATE TABLE FAVTHEATER (
	MEM_NO NUMBER NOT NULL, /* 회원번호 */
	TIC_NO NUMBER NOT NULL /* 극장번호 */
);

COMMENT ON TABLE FAVTHEATER IS '자주가는 극장';

COMMENT ON COLUMN FAVTHEATER.MEM_NO IS '회원번호';

COMMENT ON COLUMN FAVTHEATER.TIC_NO IS '극장번호';

/* 배우 */
CREATE TABLE ACTOR (
	ACT_NO NUMBER NOT NULL, /* 번호 */
	ACT_NAME VARCHAR2(20) NOT NULL /* 한글이름 */
);

COMMENT ON TABLE ACTOR IS '배우';

COMMENT ON COLUMN ACTOR.ACT_NO IS '번호';

COMMENT ON COLUMN ACTOR.ACT_NAME IS '한글이름';

CREATE UNIQUE INDEX PK_ACTOR
	ON ACTOR (
		ACT_NO ASC
	);

ALTER TABLE ACTOR
	ADD
		CONSTRAINT PK_ACTOR
		PRIMARY KEY (
			ACT_NO
		);

/* 감독 */
CREATE TABLE DIRECTOR (
	DIR_NO NUMBER NOT NULL, /* 번호 */
	DIR_NAME VARCHAR2(20) NOT NULL /* 한글이름 */
);

COMMENT ON TABLE DIRECTOR IS '감독';

COMMENT ON COLUMN DIRECTOR.DIR_NO IS '번호';

COMMENT ON COLUMN DIRECTOR.DIR_NAME IS '한글이름';

CREATE UNIQUE INDEX PK_DIRECTOR
	ON DIRECTOR (
		DIR_NO ASC
	);

ALTER TABLE DIRECTOR
	ADD
		CONSTRAINT PK_DIRECTOR
		PRIMARY KEY (
			DIR_NO
		);

/* 영화 */
CREATE TABLE MOVIE (
	MOV_NO NUMBER NOT NULL, /* 번호 */
	MOV_TITLE VARCHAR2(20) NOT NULL, /* 제목 */
	MOV_SYNOPSIS CLOB NOT NULL, /* 줄거리 */
	MOV_OFFICIALSITE VARCHAR2(50) NOT NULL, /* 공식홈 */
	MOV_SCREENINGGRADE VARCHAR2(6) NOT NULL, /* 상영등급 */
	MOV_POSTER VARCHAR2(50) NOT NULL, /* 포스터 */
	MOV_INTHEATERS VARCHAR2(19) NOT NULL, /* 개봉일 */
	MOV_RUNTIME NUMBER NOT NULL, /* 상영시간 */
	MOV_TRAILER VARCHAR2(50) NOT NULL, /* 트레일러 */
	MOV_GRADE NUMBER DEFAULT 0, /* 평점 */
	MOV_COUNT NUMBER DEFAULT 0, /* 참여인원 */
	DIR_NO NUMBER NOT NULL, /* 감독번호 */
	ACT_NO NUMBER NOT NULL, /* 배우번호 */
	PRO_NO NUMBER NOT NULL /* 제작사번호 */
);

COMMENT ON TABLE MOVIE IS '영화';

COMMENT ON COLUMN MOVIE.MOV_NO IS '번호';

COMMENT ON COLUMN MOVIE.MOV_TITLE IS '제목';

COMMENT ON COLUMN MOVIE.MOV_SYNOPSIS IS '줄거리';

COMMENT ON COLUMN MOVIE.MOV_OFFICIALSITE IS '공식홈';

COMMENT ON COLUMN MOVIE.MOV_SCREENINGGRADE IS '상영등급';

COMMENT ON COLUMN MOVIE.MOV_POSTER IS '포스터';

COMMENT ON COLUMN MOVIE.MOV_INTHEATERS IS '개봉일';

COMMENT ON COLUMN MOVIE.MOV_RUNTIME IS '상영시간';

COMMENT ON COLUMN MOVIE.MOV_TRAILER IS '트레일러';

COMMENT ON COLUMN MOVIE.MOV_GRADE IS '평점';

COMMENT ON COLUMN MOVIE.MOV_COUNT IS '참여인원';

COMMENT ON COLUMN MOVIE.DIR_NO IS '감독번호';

COMMENT ON COLUMN MOVIE.ACT_NO IS '배우번호';

COMMENT ON COLUMN MOVIE.PRO_NO IS '제작사번호';

CREATE UNIQUE INDEX PK_MOVIE
	ON MOVIE (
		MOV_NO ASC
	);

ALTER TABLE MOVIE
	ADD
		CONSTRAINT PK_MOVIE
		PRIMARY KEY (
			MOV_NO
		);

/* 관심영화 */
CREATE TABLE FAVMOVIE (
	FAV_REGDATE VARCHAR(19) NOT NULL, /* 등록일 */
	FAV_EXPDATE VARCHAR(19) NOT NULL, /* 만료일 */
	MEM_ID VARCHAR(20) NOT NULL, /* 회원ID */
	MOV_NO NUMBER NOT NULL /* 번호 */
);

COMMENT ON TABLE FAVMOVIE IS '관심영화';

COMMENT ON COLUMN FAVMOVIE.FAV_REGDATE IS '등록일';

COMMENT ON COLUMN FAVMOVIE.FAV_EXPDATE IS '만료일';

COMMENT ON COLUMN FAVMOVIE.MEM_ID IS '회원ID';

COMMENT ON COLUMN FAVMOVIE.MOV_NO IS '번호';

/* 제작사 */
CREATE TABLE PRODUCTION (
	PRO_NO NUMBER NOT NULL, /* 번호 */
	PRO_NAME VARCHAR2(20) NOT NULL /* 한글이름 */
);

COMMENT ON TABLE PRODUCTION IS '제작사';

COMMENT ON COLUMN PRODUCTION.PRO_NO IS '번호';

COMMENT ON COLUMN PRODUCTION.PRO_NAME IS '한글이름';

CREATE UNIQUE INDEX PK_PRODUCTION
	ON PRODUCTION (
		PRO_NO ASC
	);

ALTER TABLE PRODUCTION
	ADD
		CONSTRAINT PK_PRODUCTION
		PRIMARY KEY (
			PRO_NO
		);

/* F&Q */
CREATE TABLE FQ (
	FQ_NO NUMBER NOT NULL, /* 글번호 */
	MEM_NO NUMBER NOT NULL, /* 회원번호 */
	FQ_TYPE VARCHAR2(20) NOT NULL, /* 구분 */
	FQ_TITLE VARCHAR2(50) NOT NULL, /* 제목 */
	FQ_REGDATE VARCHAR2(19) NOT NULL, /* 등록일 */
	FQ_COUNT NUMBER NOT NULL, /* 조회수 */
	FQ_TEXT BLOB NOT NULL, /* 내용 */
	FILE_NO NUMBER /* 파일번호 */
);

COMMENT ON TABLE FQ IS 'F&Q';

COMMENT ON COLUMN FQ.FQ_NO IS '글번호';

COMMENT ON COLUMN FQ.MEM_NO IS '회원번호';

COMMENT ON COLUMN FQ.FQ_TYPE IS '구분';

COMMENT ON COLUMN FQ.FQ_TITLE IS '제목';

COMMENT ON COLUMN FQ.FQ_REGDATE IS '등록일';

COMMENT ON COLUMN FQ.FQ_COUNT IS '조회수';

COMMENT ON COLUMN FQ.FQ_TEXT IS '내용';

COMMENT ON COLUMN FQ.FILE_NO IS '파일번호';

CREATE UNIQUE INDEX PK_FQ
	ON FQ (
		FQ_NO ASC
	);

ALTER TABLE FQ
	ADD
		CONSTRAINT PK_FQ
		PRIMARY KEY (
			FQ_NO
		);

/* Q&A */
CREATE TABLE QA (
	FQ_NO NUMBER NOT NULL, /* 글번호 */
	MEM_NO NUMBER, /* 회원번호 */
	QA_TITLE VARCHAR2(50) NOT NULL, /* 제목 */
	FQ_REGDATE VARCHAR2(19) NOT NULL, /* 등록일 */
	FQ_LASTDATE VARCHAR2(19) NOT NULL, /* 최종수정시간 */
	QA_COUNT NUMBER NOT NULL, /* 조회수 */
	QA_TEXT BLOB NOT NULL, /* 내용 */
	QA_STATUS VARCHAR2(8) NOT NULL, /* 상태 */
	QA_SECRET VARCHAR2(6) NOT NULL, /* 비밀여부 */
	QA_PASSWORD VARCHAR2(20) NOT NULL, /* 비밀번호 */
	FQ_PARENT_NUMBER NUMBER NOT NULL, /* 부모번호 */
	FILE_NO NUMBER /* 파일번호 */
);

COMMENT ON TABLE QA IS 'Q&A';

COMMENT ON COLUMN QA.FQ_NO IS '글번호';

COMMENT ON COLUMN QA.MEM_NO IS '회원번호';

COMMENT ON COLUMN QA.QA_TITLE IS '제목';

COMMENT ON COLUMN QA.FQ_REGDATE IS '등록일';

COMMENT ON COLUMN QA.FQ_LASTDATE IS '최종수정시간';

COMMENT ON COLUMN QA.QA_COUNT IS '조회수';

COMMENT ON COLUMN QA.QA_TEXT IS '내용';

COMMENT ON COLUMN QA.QA_STATUS IS '상태';

COMMENT ON COLUMN QA.QA_SECRET IS '비밀여부';

COMMENT ON COLUMN QA.QA_PASSWORD IS '비밀번호';

COMMENT ON COLUMN QA.FQ_PARENT_NUMBER IS '부모번호';

COMMENT ON COLUMN QA.FILE_NO IS '파일번호';

CREATE UNIQUE INDEX PK_QA
	ON QA (
		FQ_NO ASC
	);

ALTER TABLE QA
	ADD
		CONSTRAINT PK_QA
		PRIMARY KEY (
			FQ_NO
		);

/* 공지사항 */
CREATE TABLE NOTICE (
	NOTI_NO NUMBER NOT NULL, /* 글번호 */
	MEM_NO NUMBER NOT NULL, /* 회원번호 */
	NOTI_TITLE VARCHAR2(50) NOT NULL, /* 제목 */
	NOTI_REGDATE VARCHAR2(19) NOT NULL, /* 등록일 */
	NOTI_COUNT NUMBER NOT NULL, /* 조회수 */
	NOTI_TEXT BLOB, /* 내용 */
	FILE_NO NUMBER /* 파일번호 */
);

COMMENT ON TABLE NOTICE IS '공지사항';

COMMENT ON COLUMN NOTICE.NOTI_NO IS '글번호';

COMMENT ON COLUMN NOTICE.MEM_NO IS '회원번호';

COMMENT ON COLUMN NOTICE.NOTI_TITLE IS '제목';

COMMENT ON COLUMN NOTICE.NOTI_REGDATE IS '등록일';

COMMENT ON COLUMN NOTICE.NOTI_COUNT IS '조회수';

COMMENT ON COLUMN NOTICE.NOTI_TEXT IS '내용';

COMMENT ON COLUMN NOTICE.FILE_NO IS '파일번호';

CREATE UNIQUE INDEX PK_NOTICE
	ON NOTICE (
		NOTI_NO ASC
	);

ALTER TABLE NOTICE
	ADD
		CONSTRAINT PK_NOTICE
		PRIMARY KEY (
			NOTI_NO
		);

/* 파일게시판 */
CREATE TABLE FILES (
	FILE_NO NUMBER NOT NULL, /* 파일번호 */
	FILE_PARENTNO NUMBER NOT NULL, /* 글번호 */
	FILE_NAME VARCHAR2(50) NOT NULL, /* 파일명 */
	FILE_ORIN_NAME VARCHAR2(50) NOT NULL /* 기존파일명 */
);

COMMENT ON TABLE FILES IS '파일게시판';

COMMENT ON COLUMN FILES.FILE_NO IS '파일번호';

COMMENT ON COLUMN FILES.FILE_PARENTNO IS '글번호';

COMMENT ON COLUMN FILES.FILE_NAME IS '파일명';

COMMENT ON COLUMN FILES.FILE_ORIN_NAME IS '기존파일명';

CREATE UNIQUE INDEX PK_FILES
	ON FILES (
		FILE_NO ASC
	);

ALTER TABLE FILES
	ADD
		CONSTRAINT PK_FILES
		PRIMARY KEY (
			FILE_NO
		);

/* 회원2 */
CREATE TABLE member_table (
	MEM_ID VARCHAR2(20) NOT NULL /* 아이디 */
);

COMMENT ON TABLE member_table IS '회원2';

COMMENT ON COLUMN member_table.MEM_ID IS '아이디';

CREATE UNIQUE INDEX PK_member_table
	ON member_table (
		MEM_ID ASC
	);

ALTER TABLE member_table
	ADD
		CONSTRAINT PK_member_table
		PRIMARY KEY (
			MEM_ID
		);

/* 코멘트 */
CREATE TABLE COMMENTS (
	COM_NO NUMBER NOT NULL, /* 번호 */
	MEM_NO NUMBER NOT NULL, /* 회원번호 */
	FQ_NO NUMBER NOT NULL, /* 글번호 */
	COM_TEXT BLOB NOT NULL, /* 내용 */
	COM_REGDATE VARCHAR2(19) NOT NULL, /* 작성일 */
	COM_LASTDATE VARCHAR2(19) NOT NULL, /* 최종수정시간 */
	COM_SECRET VARCHAR2(6) NOT NULL, /* 비밀여부 */
	COM_PASSWORD VARCHAR2(20), /* 비밀번호 */
	COM_PARENT_NUMBER NUMBER NOT NULL /* 부모번호 */
);

COMMENT ON TABLE COMMENTS IS '코멘트';

COMMENT ON COLUMN COMMENTS.COM_NO IS '번호';

COMMENT ON COLUMN COMMENTS.MEM_NO IS '회원번호';

COMMENT ON COLUMN COMMENTS.FQ_NO IS '글번호';

COMMENT ON COLUMN COMMENTS.COM_TEXT IS '내용';

COMMENT ON COLUMN COMMENTS.COM_REGDATE IS '작성일';

COMMENT ON COLUMN COMMENTS.COM_LASTDATE IS '최종수정시간';

COMMENT ON COLUMN COMMENTS.COM_SECRET IS '비밀여부';

COMMENT ON COLUMN COMMENTS.COM_PASSWORD IS '비밀번호';

COMMENT ON COLUMN COMMENTS.COM_PARENT_NUMBER IS '부모번호';

CREATE UNIQUE INDEX PK_COMMENTS
	ON COMMENTS (
		COM_NO ASC
	);

ALTER TABLE COMMENTS
	ADD
		CONSTRAINT PK_COMMENTS
		PRIMARY KEY (
			COM_NO
		);

/* 쿠폰 */
CREATE TABLE COUPON (
	COP_NO VARCHAR2(13) NOT NULL, /* 쿠폰번호 */
	MEM_NO NUMBER NOT NULL, /* 회원번호 */
	COP_NAME VARCHAR2(20) NOT NULL, /* 쿠폰이름 */
	COP_DISCOUNT NUMBER NOT NULL, /* 할인액 */
	COP_EXPDATE VARCHAR2(19) NOT NULL, /* 만료일 */
	COP_REGDATE VARCHAR2(19) NOT NULL, /* 발행일 */
	COP_USED VARCHAR2(6) NOT NULL, /* 사용유무 */
	COP_USEDATE VARCHAR2(19) /* 사용일 */
);

COMMENT ON TABLE COUPON IS '쿠폰';

COMMENT ON COLUMN COUPON.COP_NO IS '쿠폰번호';

COMMENT ON COLUMN COUPON.MEM_NO IS '회원번호';

COMMENT ON COLUMN COUPON.COP_NAME IS '쿠폰이름';

COMMENT ON COLUMN COUPON.COP_DISCOUNT IS '할인액';

COMMENT ON COLUMN COUPON.COP_EXPDATE IS '만료일';

COMMENT ON COLUMN COUPON.COP_REGDATE IS '발행일';

COMMENT ON COLUMN COUPON.COP_USED IS '사용유무';

COMMENT ON COLUMN COUPON.COP_USEDATE IS '사용일';

CREATE UNIQUE INDEX PK_COUPON
	ON COUPON (
		COP_NO ASC
	);

ALTER TABLE COUPON
	ADD
		CONSTRAINT PK_COUPON
		PRIMARY KEY (
			COP_NO
		);

/* 이벤트 */
CREATE TABLE EVENT (
	EVT_NO NUMBER NOT NULL, /* 이벤트번호 */
	EVT_NAME VARCHAR2(50) NOT NULL, /* 이벤트이름 */
	EVT_STARTDATE VARCHAR2(19) NOT NULL, /* 이벤트시작일 */
	EVT_ENDDATE VARCHAR2(19) NOT NULL, /* 이벤트종료일 */
	EVT_REGDATE VARCHAR2(19) NOT NULL, /* 이벤트등록일 */
	EVT_TITLE BLOB NOT NULL /* 이벤트내용 */
);

COMMENT ON TABLE EVENT IS '이벤트';

COMMENT ON COLUMN EVENT.EVT_NO IS '이벤트번호';

COMMENT ON COLUMN EVENT.EVT_NAME IS '이벤트이름';

COMMENT ON COLUMN EVENT.EVT_STARTDATE IS '이벤트시작일';

COMMENT ON COLUMN EVENT.EVT_ENDDATE IS '이벤트종료일';

COMMENT ON COLUMN EVENT.EVT_REGDATE IS '이벤트등록일';

COMMENT ON COLUMN EVENT.EVT_TITLE IS '이벤트내용';

CREATE UNIQUE INDEX PK_EVENT
	ON EVENT (
		EVT_NO ASC
	);

ALTER TABLE EVENT
	ADD
		CONSTRAINT PK_EVENT
		PRIMARY KEY (
			EVT_NO
		);

/* 당첨자 */
CREATE TABLE WINNER (
	WIN_NO NUMBER NOT NULL, /* 당첨번호 */
	WIN_REGDATE VARCHAR2(19) NOT NULL, /* 당첨자등록일 */
	WIN_TEXT BLOB NOT NULL /* 당첨자내용 */
);

COMMENT ON TABLE WINNER IS '당첨자';

COMMENT ON COLUMN WINNER.WIN_NO IS '당첨번호';

COMMENT ON COLUMN WINNER.WIN_REGDATE IS '당첨자등록일';

COMMENT ON COLUMN WINNER.WIN_TEXT IS '당첨자내용';

CREATE UNIQUE INDEX PK_WINNER
	ON WINNER (
		WIN_NO ASC
	);

ALTER TABLE WINNER
	ADD
		CONSTRAINT PK_WINNER
		PRIMARY KEY (
			WIN_NO
		);

ALTER TABLE MEMBER
	ADD
		CONSTRAINT FK_ZIPCODE_TO_MEMBER
		FOREIGN KEY (
			ZIP_NO
		)
		REFERENCES ZIPCODE (
			ZIP_NO
		);

ALTER TABLE THEATER
	ADD
		CONSTRAINT FK_ZIPCODE_TO_THEATER
		FOREIGN KEY (
			ZIP_NO
		)
		REFERENCES ZIPCODE (
			ZIP_NO
		);

ALTER TABLE TICKET
	ADD
		CONSTRAINT FK_SCHEDULE_TO_TICKET
		FOREIGN KEY (
			SCH_NO
		)
		REFERENCES SCHEDULE (
			SCH_NO
		);

ALTER TABLE TICKET
	ADD
		CONSTRAINT FK_MEMBER_TO_TICKET
		FOREIGN KEY (
			MEM_NO
		)
		REFERENCES MEMBER (
			MEM_NO
		);

ALTER TABLE SCHEDULE
	ADD
		CONSTRAINT FK_THEATER_TO_SCHEDULE
		FOREIGN KEY (
			SCH_TNO
		)
		REFERENCES THEATER (
			THEA_NO
		);

ALTER TABLE SCHEDULE
	ADD
		CONSTRAINT FK_MOVIE_TO_SCHEDULE
		FOREIGN KEY (
			MOV_NO
		)
		REFERENCES MOVIE (
			MOV_NO
		);

ALTER TABLE FAVTHEATER
	ADD
		CONSTRAINT FK_MEMBER_TO_FAVTHEATER
		FOREIGN KEY (
			MEM_NO
		)
		REFERENCES MEMBER (
			MEM_NO
		);

ALTER TABLE FAVTHEATER
	ADD
		CONSTRAINT FK_THEATER_TO_FAVTHEATER
		FOREIGN KEY (
			TIC_NO
		)
		REFERENCES THEATER (
			THEA_NO
		);

ALTER TABLE MOVIE
	ADD
		CONSTRAINT FK_DIRECTOR_TO_MOVIE
		FOREIGN KEY (
			DIR_NO
		)
		REFERENCES DIRECTOR (
			DIR_NO
		);

ALTER TABLE MOVIE
	ADD
		CONSTRAINT FK_ACTOR_TO_MOVIE
		FOREIGN KEY (
			ACT_NO
		)
		REFERENCES ACTOR (
			ACT_NO
		);

ALTER TABLE MOVIE
	ADD
		CONSTRAINT FK_PRODUCTION_TO_MOVIE
		FOREIGN KEY (
			PRO_NO
		)
		REFERENCES PRODUCTION (
			PRO_NO
		);

ALTER TABLE FAVMOVIE
	ADD
		CONSTRAINT FK_MOVIE_TO_FAVMOVIE
		FOREIGN KEY (
			MOV_NO
		)
		REFERENCES MOVIE (
			MOV_NO
		);

ALTER TABLE FQ
	ADD
		CONSTRAINT FK_MEMBER_TO_FQ
		FOREIGN KEY (
			MEM_NO
		)
		REFERENCES MEMBER (
			MEM_NO
		);

ALTER TABLE QA
	ADD
		CONSTRAINT FK_MEMBER_TO_QA
		FOREIGN KEY (
			MEM_NO
		)
		REFERENCES MEMBER (
			MEM_NO
		);

ALTER TABLE NOTICE
	ADD
		CONSTRAINT FK_MEMBER_TO_NOTICE
		FOREIGN KEY (
			MEM_NO
		)
		REFERENCES MEMBER (
			MEM_NO
		);

ALTER TABLE COMMENTS
	ADD
		CONSTRAINT FK_QA_TO_COMMENTS
		FOREIGN KEY (
			FQ_NO
		)
		REFERENCES QA (
			FQ_NO
		);

ALTER TABLE COMMENTS
	ADD
		CONSTRAINT FK_MEMBER_TO_COMMENTS
		FOREIGN KEY (
			MEM_NO
		)
		REFERENCES MEMBER (
			MEM_NO
		);

ALTER TABLE COUPON
	ADD
		CONSTRAINT FK_MEMBER_TO_COUPON
		FOREIGN KEY (
			MEM_NO
		)
		REFERENCES MEMBER (
			MEM_NO
		);