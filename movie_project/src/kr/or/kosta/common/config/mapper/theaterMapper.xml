<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="theater.dao.theaterMapper">
	<resultMap type="theaterVO" id="theater-resultmap">
		<id column="thea_no" property="theaNo"/>
		<result column="zip_no" property="zipNo"/>
		<result column="zip_zipcode" property="zipZipcode"/>
		<result column="thea_location" property="theaLocation"/>
		<result column="thea_phoneno" property="theaPhoneNo"/>
		<result column="thea_address1" property="theaAddress1"/>
		<result column="thea_address2" property="theaAddress2"/>
		<result column="thea_status" property="theaStatus"/>
	</resultMap>
	
	<insert id="insertTheater" parameterType="theaterVO">
		insert into theater (thea_no, zip_no, thea_location, thea_phoneNo, thea_address1, thea_address2)
		values (THEATER_SEQ.nextval, #{zipNo}, #{theaLocation}, #{theaPhoneNo}, #{theaAddress1}, #{theaAddress2})
	</insert>
	
	<update id="updateTheater" parameterType="theaterVO">
		update theater
		set		zip_no=#{zipNo},
					thea_location=#{theaLocation},
					thea_phoneno=#{theaPhoneNo},
					thea_address1=#{theaAddress1},
					thea_address2=#{theaAddress2},
					thea_status=#{theaStatus}
		where	thea_no=#{theaNo}
	</update>
	
	<delete id="deleteMemberById" parameterType="string">
		delete from member where id=#{id}
	</delete>
		
	<select id="selectTheaterByTheaNo" parameterType="_int" resultMap="theater-resultmap">
		select 	t.thea_no, t.zip_no, z.zip_zipcode, t.thea_location, t.thea_phoneno, t.thea_address1, t.thea_address2, t.thea_status
		from		theater t, zipcode z
		where t.zip_no = z.zip_no
			and t.thea_no = ${value}
	</select>
	
	<select id="selectAllTheater" resultMap="theater-resultmap">
		select 	t.thea_no, t.zip_no, z.zip_zipcode, t.thea_location, t.thea_phoneno, t.thea_address1, t.thea_address2, t.thea_status
		from		theater t, zipcode z
		where t.zip_no = z.zip_no
		order by t.thea_location
	</select>
	
	<!-- Paging 추가 -->
	<select id="selectAllMemberPaging" parameterType="map" resultMap="theater-resultmap">
		select id, password, name, email, join_date
		from (
			select ceil(rownum/#{contentsPerPage}) page, id, password, name, email, join_date
			from (
					
					order by join_date
			)
		) 
		where page = #{pageNo}
	</select>
	<select id="selectTotalMemberCount" resultType="_int">
		select count(id) from member
	</select>
</mapper>
