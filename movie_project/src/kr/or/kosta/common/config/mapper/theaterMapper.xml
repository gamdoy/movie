<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="theater.dao.theaterMapper">
	<resultMap type="theaterVO" id="theater-resultmap">
		<id column="thea_no" property="theaNo"/>
		<result column="zip_no" property="zipNo"/>
		<result column="zip_zipcode" property="zipZipcode"/>
		<result column="thea_location" property="theaLocation"/>
		<result column="thea_phoneno" property="theaPhoneNo"/>
		<result column="thea_address1" property="theaAddress1"/>
		<result column="thea_address2" property="theaAddress2"/>
		<result column="thea_status" property="theaStatus"/>
	</resultMap>
	
	<resultMap type="scheduleVO" id="schdule-resultmap">
		<id column="sch_no" property="schNo"/>
		<result column="mov_no" property="movNo"/>
		<result column="mov_poster" property="movPoster"/>
		<result column="mr_no" property="mrNo"/>
		<result column="sch_date" property="schDate"/>
		<result column="thea_no" property="theaNo"/>
		<result column="empty_seat" property="emptySeat"/>
	</resultMap>
	
	<resultMap type="ticketVO" id="ticket-resultmap">
		<id column="tic_no" property="ticNo"/>
		<result column="tic_date" property="ticDate"/>
		<result column="tic_price" property="ticPrice"/>
		<result column="tic_paytype" property="ticPaytype"/>
		<result column="tic_paytypename" property="ticPaytypename"/>
		<result column="tic_paytypecode" property="ticPaytypecode"/>
		<result column="tic_seatno" property="ticSeatno"/>
		<result column="tic_totalcustomer" property="ticTotalcustomer"/>
		<result column="sch_no" property="schNo"/>
		<result column="sch_date" property="schDate"/>
		<result column="mr_no" property="mrNo"/>
		<result column="mr_name" property="mrName"/>
		<result column="mr_screentype" property="mrScreentype"/>
		<result column="mr_screenname" property="mrScreenname"/>
		<result column="mr_line" property="mrLine"/>
		<result column="mr_seat" property="mrSeat"/>
		<result column="thea_no" property="theaNo"/>
		<result column="thea_location" property="theaLocation"/>
		<result column="mem_no" property="memNo"/>
		<result column="mem_id" property="memId"/>
		<result column="mov_No" property="movNo"/>
		<result column="mov_Title" property="movTitle"/>
		<result column="tic_status" property="ticStatus"/>
		<result column="tic_statusname" property="ticStatusname"/>
	</resultMap>
	
	<insert id="insertTheater" parameterType="theaterVO">
		<selectKey keyProperty="theaNo" resultType="_int" order="BEFORE">
			select THEATER_SEQ.nextval from dual
		</selectKey>
		insert into theater (thea_no, zip_no, thea_location, thea_phoneNo, thea_address1, thea_address2)
		values (#{theaNo}, #{zipNo}, #{theaLocation}, #{theaPhoneNo}, #{theaAddress1}, #{theaAddress2})
	</insert>
	
	<update id="updateTheater" parameterType="theaterVO">
		update theater
		set		zip_no=#{zipNo},
					thea_location=#{theaLocation},
					thea_phoneno=#{theaPhoneNo},
					thea_address1=#{theaAddress1},
					thea_address2=#{theaAddress2},
					thea_status=#{theaStatus}
		where	thea_no=#{theaNo}
	</update>
	
	<delete id="deleteMemberById" parameterType="string">
		delete from member where id=#{id}
	</delete>
		
	<select id="selectTheaterByTheaNo" parameterType="_int" resultMap="theater-resultmap">
		select 	t.thea_no, t.zip_no, z.zip_zipcode, t.thea_location, t.thea_phoneno, t.thea_address1, t.thea_address2, t.thea_status
		from		theater t, zipcode z
		where t.zip_no = z.zip_no
			and t.thea_no = ${value}
	</select>
	
	<select id="selectAllTheater" resultMap="theater-resultmap">
		select 	t.thea_no, t.zip_no, z.zip_zipcode, t.thea_location, t.thea_phoneno, t.thea_address1, t.thea_address2, t.thea_status
		from		theater t, zipcode z
		where t.zip_no = z.zip_no
		order by t.thea_location
	</select>
	
	<!-- 극장별 상영일 조회 -->
	<select id="selectSechduleList" parameterType="_int" resultMap="schdule-resultmap">
		select distinct substr(sch_date,1,10) sch_date
		from schedule s, movieroom mr, theater t
		where sch_date > to_char(sysdate, 'yyyy-mm-dd hh24:mi')
			and mr.mr_no = s.mr_no
			and mr.thea_no = t.thea_no
			and t.thea_no = ${value}
		order by sch_date
	</select>
	
	<!-- 일자별 상영 영화리스트 조회 -->
	<select id="selectMovieListByDate" parameterType="scheduleVO" resultMap="ticket-resultmap">
		select distinct substr(sch_date,1,10) sch_date, mov.mov_title, mov.mov_no, mov.mov_poster
		from schedule s, movieroom mr, theater t, movie mov
		where sch_date > to_char(sysdate, 'yyyy-mm-dd hh24:mi')
			and mr.mr_no = s.mr_no
			and mr.thea_no = t.thea_no
      		and mov.mov_no = s.MOV_NO
			and t.thea_no = #{theaNo}
			and s.sch_date  <![CDATA[>=]]>  #{schDate} || ' 00:00:00'
			and s.sch_date  <![CDATA[<=]]> #{schDate} || ' 23:59:59'
		order by sch_date
	</select>
	
	<!-- 예매 여부 확인 -->
	<select id="isReservedSeats" parameterType="ticketVO" resultType="_int">
		select count(tic_seatno) 
		from ticket
		where sch_no=#{schNo}
			and tic_seatno like '%' ||#{ticSeatno}||'%'
	</select>
	
	<!-- 극장별 상영 정보 조회  -->
	<select id="selectSechduleListByTheater" parameterType="_int" resultMap="schdule-resultmap">
		select s.sch_no, s.sch_no, s.mr_no, s.sch_date, m.thea_no
		from schedule s, movieroom m
		where s.mr_no = m.mr_no
		<if test="value != 0">
			and m.thea_no = #{value}
		</if>
		order by m.thea_no, s.sch_no
	</select>
	
	<!-- 극장별 해당 상영일 시간표 조회  -->
	<select id="selectScreenTimeList" parameterType="scheduleVO" resultMap="schdule-resultmap">
		select SUBSTR(s.sch_date, 12) sch_date, s.sch_no, s.mr_no, mov.mov_no, mov.mov_poster
    	, (select nvl((movieroom.mr_line * movieroom.mr_seat) - (select sum(TIC_TOTALCUSTOMER) from ticket where ticket.sch_no = s.sch_no), mr.MR_LINE * mr.MR_SEAT) from movieroom, schedule where movieroom.mr_no = schedule.mr_no and schedule.sch_no=s.sch_no) empty_seat
		from schedule s, movieroom mr, theater t, movie mov
		where 1=1
			and mr.mr_no = s.mr_no
			and mr.thea_no = t.thea_no
			and s.mov_no = mov.mov_no
			and mov.mov_no = #{movNo}
		<if test="theaNo != 0">
			and mr.thea_no = #{theaNo}
		</if>
		<if test="schDate != null">
			and SUBSTR(s.sch_date, 1, 10) = #{schDate}
		</if>
		and s.sch_date > to_char(sysdate, 'yyyy-mm-dd hh24:mi:ss')
		order by s.sch_date
	</select>
	
	<!-- Paging 추가 -->
	<select id="selectAllMemberPaging" parameterType="map" resultMap="theater-resultmap">
		select id, password, name, email, join_date
		from (
			select ceil(rownum/#{contentsPerPage}) page, id, password, name, email, join_date
			from (

					order by join_date
			)
		) 
		where page = #{pageNo}
	</select>
	<select id="selectTotalMemberCount" resultType="_int">
		select count(id) from member
	</select>
	
	<!-- 상영관 정보를 조회 -->
	<select id="selectMovieRoomByNo" parameterType="_int" resultMap="ticket-resultmap">
		select s.sch_no, s.mr_no, mr.thea_no, mr.mr_name, mr.mr_screentype, c.cmn_code_kor mr_screenname, mr.mr_line, mr.mr_seat, s.sch_date
		from schedule s, movieroom mr, commoncode c
		where 1=1
		and s.sch_no = #{value}
		and s.mr_no = mr.mr_no
		and mr.MR_SCREENTYPE = c.cmn_no
	</select>
	
	<!-- 티켓 정보를 입력 -->
	<insert id="insertTicket" parameterType="ticketVO">
		<selectKey keyProperty="ticNo" resultType="_int" order="BEFORE">
			select ticket_seq.nextval from dual
		</selectKey>
		insert into ticket (tic_no, mem_no, sch_no, tic_date, tic_price, tic_paytype, tic_seatno, tic_totalcustomer)
		values (#{ticNo}, #{memNo}, #{schNo}, #{ticDate}, #{ticPrice}, #{ticPaytype}, #{ticSeatno}, #{ticTotalcustomer})
	</insert>
	
	<!-- 티켓 정보를 입력 -->
	<select id="selectTicket" resultMap="ticket-resultmap" parameterType="_int">
		select tic_no, mem_no, sch_no, tic_date, tic_price, tic_paytype, tic_seatno, tic_totalcustomer from ticket
		where 1=1
		and tic_no=#{value}
	</select>
	
	<!-- 티켓 정보를 입력(paging) -->
	<select id="selectTicketListPaging" parameterType="map" resultMap="ticket-resultmap">
		select tic_no, mem_no, mem_id, mem_name, sch_no, tic_date, tic_price, tic_paytype, tic_seatno, tic_totalcustomer, 
		thea_location, mr_name,  tic_paytypename,  tic_paytypecode, mov_no, mov_title, tic_status,  tic_statusname
		from (
			select ceil(rownum/#{contentsPerPage}) page, tic_no, mem_no, mem_id, mem_name, sch_no, tic_date, tic_price, 
			tic_paytype, tic_seatno, tic_totalcustomer, thea_location, mr_name,  tic_paytypename,  tic_paytypecode,
			mov_no, mov_title, tic_status,  tic_statusname
			from (
					select t.tic_no, mem.mem_no, mem.mem_id, mem_name, s.sch_no, 
					t.tic_date, t.tic_price, t.tic_paytype, t.tic_seatno, t.tic_totalcustomer, 
					thea.thea_location, mr.mr_name,  c.cmn_code_kor tic_paytypename, c.cmn_code_eng tic_paytypecode,
					m.mov_no, m.mov_title, t.tic_status, (select commoncode.cmn_code_kor from commoncode where commoncode.cmn_no = t.tic_status) tic_statusname
					from ticket t, member mem, schedule s, movieroom mr, theater thea, commoncode c, movie m
			    	where 1=1
			    		and t.mem_no = mem.mem_no
			    		and s.sch_no = t.sch_no
			    		and s.mr_no = mr.mr_no
			    		and mr.thea_no = thea.thea_no
			    		and c.cmn_no = t.tic_paytype
			    		and s.mov_no = m.mov_no
			    	order by t.tic_no
			)
			<if test="searchKeyword != null and searchKeyword != ''">
				where ${searchType} = #{searchKeyword}
			</if>
		) 
		where page = #{pageNo}
	</select>
	
	<select id="selectTotalTicketCount" parameterType="map" resultType="_int">
		select count(tic_no)
			from (
					select t.tic_no, mem.mem_no, mem.mem_id, mem_name, s.sch_no, 
					t.tic_date, t.tic_price, t.tic_paytype, t.tic_seatno, t.tic_totalcustomer, 
					thea.thea_location, mr.mr_name,  c.cmn_code_kor tic_paytypename, c.cmn_code_eng tic_paytypecode,
					m.mov_no, m.mov_title, t.tic_status, (select commoncode.cmn_code_kor from commoncode where commoncode.cmn_no = t.tic_status) tic_statusname
					from ticket t, member mem, schedule s, movieroom mr, theater thea, commoncode c, movie m
			    	where 1=1
			    		and t.mem_no = mem.mem_no
			    		and s.sch_no = t.sch_no
			    		and s.mr_no = mr.mr_no
			    		and mr.thea_no = thea.thea_no
			    		and c.cmn_no = t.tic_paytype
			    		and s.mov_no = m.mov_no
			    	order by t.tic_no
			)
			<if test="searchKeyword != null and searchKeyword != ''">
				where ${searchType} = #{searchKeyword}
			</if>
	</select>
	
	<!-- 티켓 정보를 조회 -->
	<select id="selectTicketList" resultMap="ticket-resultmap">
		select t.tic_no, mem.mem_no, mem.mem_id, mem_name, s.sch_no, 
			t.tic_date, t.tic_price, t.tic_paytype, t.tic_seatno, t.tic_totalcustomer, 
			thea.thea_location, mr.mr_name,  c.cmn_code_kor tic_paytypename, c.cmn_code_eng tic_paytypecode,
			m.mov_no, m.mov_title, t.tic_status, (select commoncode.cmn_code_kor from commoncode where commoncode.cmn_no = t.tic_status) tic_statusname
		from ticket t, member mem, schedule s, movieroom mr, theater thea, commoncode c, movie m
    	where 1=1
    		and t.mem_no = mem.mem_no
    		and s.sch_no = t.sch_no
    		and s.mr_no = mr.mr_no
    		and mr.thea_no = thea.thea_no
    		and c.cmn_no = t.tic_paytype
    		and s.mov_no = m.mov_no
    	order by t.tic_no
	</select>
	
	<!-- 티켓 결제정보 수정 -->
	<update id="updateTicketByNo" parameterType="ticketVO">
		update ticket
		set tic_status = #{ticStatus}
		where tic_no = #{ticNo}
	</update>
	
	<!--예매한 티켓 정보를 조회 -->
	<select id="selectTicketByNo" resultMap="ticket-resultmap" parameterType="_int">
		select tic_no, mem_no, sch_no, tic_date, tic_price, tic_paytype, tic_seatno, tic_totalcustomer from ticket
		where 1=1
		and tic_no=#{value}
	</select>
	
	<!-- 예매된 좌석 정보를 조회 -->
	<select id="selectReservedSeats" parameterType="ticketVO" resultType="String">
		select tic_seatno 
		from ticket t
		where 1=1
			<if test="schNo != 0">
				and sch_no=#{schNo}
			</if>
	</select>
	
	
</mapper>
