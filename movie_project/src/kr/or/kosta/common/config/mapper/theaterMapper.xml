<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="theater.dao.theaterMapper">
	<sql id="theater-select">
		select 	thea_no
		from		theater			
	</sql>
	
	<resultMap type="theaterVO" id="theater-resultmap">
		<id column="thea_no" property="theaNo"/>
	</resultMap>
	
	<insert id="insertMember" parameterType="theaterVO">
		insert into member (id, password, name, email, join_date, picture_name)
		values (#{id}, #{password}, #{name}, #{email}, to_char(sysdate, 'yyyymmdd'), #{pictureName, jdbcType=VARCHAR})
	</insert>
	
	<update id="updateMember" parameterType="theaterVO">
		update member
		set		password=#{password},
					name=#{name},
					email=#{email}
					<if test="pictureName!=null">
					,picture_name=#{pictureName}
					</if>
		where	id=#{id}
	</update>
	
	<delete id="deleteMemberById" parameterType="string">
		delete from member where id=#{id}
	</delete>
		
	<select id="selectMemberById" parameterType="string" resultMap="theater-resultmap">
		<include refid="theater-select"/>
		where	id=#{id}
	</select>
	
	<select id="selectAllTheater" resultMap="theater-resultmap">
		<include refid="theater-select"/>
	</select>
	
	<!-- Paging 추가 -->
	<select id="selectAllMemberPaging" parameterType="map" resultMap="theater-resultmap">
		select id, password, name, email, join_date
		from (
			select ceil(rownum/#{contentsPerPage}) page, id, password, name, email, join_date
			from (
					<include refid="theater-select"/>
					order by join_date
			)
		) 
		where page = #{pageNo}
	</select>
	<select id="selectTotalMemberCount" resultType="_int">
		select count(id) from member
	</select>
</mapper>
