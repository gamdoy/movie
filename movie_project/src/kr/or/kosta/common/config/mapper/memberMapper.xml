<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper  namespace="member.dao.memberMapper">
	
	<sql id="member-select">
		select mem_no,
			   zip_no,
			   mem_id,
			   mem_name,
			   mem_password,
			   mem_addressdetail,
			   mem_birthdate,
			   mem_email,
			   mem_phoneno,
			   mem_mileage,
			   mem_membertype,
			   mem_joindate,
			   mem_lastlogin
		from member 
	</sql>
 
 	<resultMap type="memberVO" id="member-resultmap">
 		<id column="mem_no" property="memNo"/>
 		<id column="zip_no" property="zipNo"/>
 		<id column="mem_id" property="memId"/>
 		<id column="mem_name" property="memName"/>
 		<id column="mem_password" property="memPassword"/>
 		<id column="mem_addressdetail" property="memAddressDetail"/>
 		<id column="mem_birthdate" property="memBirthDate"/>
 		<id column="mem_email" property="memEmail"/>
 		<id column="mem_phoneno" property="memPhoneNo"/>
 		<id column="mem_mileage" property="memMileage"/>
 		<id column="mem_membertype" property="memMemberType"/>
 		<id column="mem_joindate" property="memJoinDate"/>
 		<id column="mem_lastlogin" property="memLastLogin"/>	
 	</resultMap>
 	
 	<insert id="insertMember" parameterType="memberVO">
 		<selectKey keyProperty="memNo" resultType="_int" order="BEFORE">
			select member_SEQ.nextval from dual
		</selectKey>
 		insert into member (mem_no,zip_no,mem_id,mem_name,mem_password,
 		mem_addressdetail,mem_birthdate,mem_email,mem_phoneno,mem_mileage,mem_membertype,mem_joindate)
 		 values(#{memNo},#{zipNo},#{memId},#{memName},#{memPassword},

 		 #{memAddressDetail},#{memBirthDate},#{memEmail},#{memPhoneNo},0,
 		 #{memMemberType},to_char(sysdate,'yyyy-mm-dd hh24:mi:ss'))
 	</insert>
 	
 	<select id="selectAllMember" resultMap="member-resultmap">
 		<include refid="member-select"/>
 	</select>
 	
 	<update id="updateMember" parameterType="memberVO">
 		update member
 		set zip_no=#{zipNo},
 			mem_name=#{memName},
 			mem_password=#{memPassword},
 			mem_addressdetail=#{memAddressDetail},
 			mem_birthdate=#{memBirthDate},
 			mem_email=#{memEmail},
 		 	MEM_MEMBERTYPE=#{memMemberType},
 			mem_phoneno=#{memPhoneNo}
 		where mem_id=#{memId}		
 	</update>
 	
 	<delete id="deleteMemberById" parameterType="string">
 		delete from member where mem_id=#{memId}
 	</delete>
 	
 	<select id="selectMemberById" parameterType="string" resultMap="member-resultmap">
 		<include refid="member-select"/>
 		where mem_id=#{memId}
 	</select>
 	
 	<select id="selectMemberByNo" parameterType="_int" resultMap="member-resultmap">
 		<include refid="member-select"/>
 		where mem_no=#{memNo}
 	</select>
</mapper>
