<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.or.kosta.common.config.movieMapper">
	<sql id="movie-select">
	    select m.MOV_NO,
			   m.MOV_TITLE, 
			   m.MOV_SYNOPSIS,
			   m.MOV_OFFICIALSITE,
			   m.MOV_SCREENINGGRADE,
			   m.MOV_POSTER,
			   m.MOV_INTHEATERS,
			   m.MOV_RUNTIME,
			   m.MOV_TRAILER,
			   m.MOV_GENRE,
			   m.DIR_NO,
			   m.ACT_NO,
			   m.PRO_NO,
			   a.act_name,
			   d.dir_name,
			   p.pro_name,
			   (select  commoncode.cmn_code_kor from commoncode where commoncode.CMN_NO =m.MOV_SCREENINGGRADE) sgrade_name,
         	   (select  commoncode.cmn_code_kor from commoncode where commoncode.CMN_NO =m.MOV_GENRE) genre_name
		from movie m, director d, actor a, production p
		where m.dir_No = d.dir_No and
			  m.act_No = a.act_No and
			  m.pro_No = p.pro_No
	</sql>
	
	<!-- 공통관리 -->
	<resultMap type="commonCodeVO" id="commonCode-resultmap">
		<result column="cmn_no" property="cmnNo"/>
		<result column="cmn_code_eng" property="cmnCodeEng"/>
		<result column="cmn_code_kor" property="cmnCodeKor"/>
	</resultMap>
	
	<select id="commoncode" resultMap="commonCode-resultmap">
		select * from commoncode
	</select>
	<!-- movie resultmap -->
	<resultMap type="movieVO" id="movie-resultmap">
		<id column="mov_no" property="movieNo"/>
		<result column="mov_title" property="title"/>
		<result column="MOV_SYNOPSIS" property="sysnopsis"/>
		<result column="MOV_OFFICIALSITE" property="officialSite"/>
		<result column="MOV_SCREENINGGRADE" property="screeningGrade"/>
		<result column="MOV_POSTER" property="posterName"/>
		<result column="MOV_INTHEATERS" property="intheaters"/>
		<result column="MOV_RUNTIME" property="runtime"/>
		<result column="MOV_TRAILER" property="trailer"/>
		<result column="MOV_GRADE" property="movGrade"/>
		<result column="MOV_COUNT" property="movCount"/>
		<result column="MOV_GENRE" property="genre"/>
		<result column="DIR_NO" property="dirNo"/>
		<result column="ACT_NO" property="actNo"/>
		<result column="PRO_NO" property="proNo"/>
		<result column="DIR_NAME" property="dirName"/>
		<result column="ACT_NAME" property="actName"/>
		<result column="PRO_NAME" property="proName"/>
		<result column="genre_name" property="genreName"/>
		<result column="sgrade_name" property="sgradeName"/>
	</resultMap>
	
	<!-- 영화등록 -->
	<insert id="insertMovie" parameterType="movieVO">
		<selectKey keyProperty="movieNo" resultType="_int" order="BEFORE">
			SELECT  movie_seq.nextval from dual
		</selectKey>
		insert into MOVIE 
		(MOV_NO, MOV_TITLE, MOV_SYNOPSIS, MOV_OFFICIALSITE, MOV_SCREENINGGRADE, MOV_POSTER, MOV_INTHEATERS,
		 MOV_RUNTIME, MOV_TRAILER,MOV_GENRE, DIR_NO, ACT_NO, PRO_NO)
		  values(#{movieNo}, #{title}, #{sysnopsis}, #{officialSite}, #{screeningGrade}, #{posterName},
		   #{intheaters}, #{runtime}, #{trailer},#{genre}, #{dirNo}, #{actNo }, #{proNo})
	</insert>
	
	<!-- mov_no 값으로 조회 -->
	<select id="getMovieByNo" resultMap="movie-resultmap" parameterType="_int" >
		<include refid="movie-select"/>
       		  and m.mov_no= ${value}
	</select>
	
	<!-- 전체 영화조회 -paging 추가 -->
	<select id="allMovie" parameterType="map" resultMap="movie-resultmap">
		    select
		       MOV_NO,
			   MOV_TITLE, 
			   MOV_SYNOPSIS,
			   MOV_OFFICIALSITE,
			   MOV_SCREENINGGRADE,
			   MOV_POSTER,
			   MOV_INTHEATERS,
			   MOV_RUNTIME,
			   MOV_TRAILER,
			   MOV_GENRE,
			   DIR_NO,
			   ACT_NO,
			   PRO_NO,
			   act_name,
			   dir_name,
			   pro_name,
  		       sgrade_name,
        	   genre_name
			from (
			   select ceil(rownum/#{contentsPerPage}) page,
			   MOV_NO,
			   MOV_TITLE, 
			   MOV_SYNOPSIS,
			   MOV_OFFICIALSITE,
			   MOV_SCREENINGGRADE,
			   MOV_POSTER,
			   MOV_INTHEATERS,
			   MOV_RUNTIME,
			   MOV_TRAILER,
			   MOV_GENRE,
			   DIR_NO,
			   ACT_NO,
			   PRO_NO,
			   act_name,
			   dir_name,
			   pro_name,
      		   sgrade_name,
      		   genre_name
		from(
         <include refid="movie-select"/>
        order by mov_no
			) 
			<if test="searchKeyword != null and searchKeyword != ''">
				where ${searchType} = #{searchKeyword}
			</if>
      )
		where page = #{pageNo}
		
	</select>
	
	<select id="totalMovieCount" resultType="_int" parameterType="searchVO"> 
		select count(mov_no)
		from(
         <include refid="movie-select"/>
			) 
		<if test="searchKeyword != null and searchKeyword != ''">
				where ${searchType} = #{searchKeyword}
		</if>
	</select>
	  
	<!-- 영화정보 수정 -->
	<update id="updateMovie" parameterType="movieVO"  >
		update movie
		   set MOV_TITLE=#{title }, 
			   MOV_SYNOPSIS=#{sysnopsis },
			   MOV_OFFICIALSITE=#{officialSite },
			   MOV_SCREENINGGRADE=#{screeningGrade },
			   MOV_POSTER=#{posterName },
			   MOV_INTHEATERS=#{intheaters },
			   MOV_RUNTIME=#{runtime },
			   MOV_TRAILER=#{trailer },
			   MOV_GENRE=#{genre },
			   DIR_NO=#{dirNo },
			   ACT_NO=#{actNo },
			   PRO_NO=#{proNo }
		 where MOV_NO=#{movieNo }
	</update>
	
	<!-- 감독 -->
	<resultMap type="directorVO" id="director-resultmap">
		<result column="dir_no" property="dirNo"/>
		<result column="dir_name" property="dirName"/>
	</resultMap>
	<select id="director" resultMap="director-resultmap">
		select * from director
	</select>
	
	<!-- 배우 -->
	<resultMap type="actorVO" id="actor-resultmap">
		<result column="act_no" property="actNo"/>
		<result column="act_name" property="actName"/>
	</resultMap>
	<select id="actor" resultMap="actor-resultmap">
		select * from actor
	</select>
	
	<!-- 제작사 -->
	<resultMap type="productionVO" id="production-resultmap">
		<result column="pro_no" property="proNo"/>
		<result column="pro_name" property="proName"/>
	</resultMap>
	<select id="production" resultMap="production-resultmap">
		select * from production
	</select>
	
</mapper>
